package mountain;

import fractal.*;

public class Mountain extends Fractal {
	private Point a;
	private Point b;
	private Point c;
	private int lengthab;
	private int lengthbc;
	private int lengthca;
	private double alphaab;
	private double alphabc;
	private double alphaca;

	public Mountain() {
		a = new Point(50, 50);
		b = new Point(110, 220);
		c = new Point(220, 110);
		
		int abx = (int) (a.getX() - b.getX());
		System.out.println(abx);
		int aby = (int) (a.getY() - b.getY());
		int abxabs = Math.abs(abx);
//		System.out.println(abxabs);
		int abyabs = Math.abs(aby);
		int abxabssqr = abxabs * abxabs;
//		System.out.println(abxabssqr);
		int abyabssqr = abyabs * abyabs;
		lengthab = (int) Math.sqrt(abxabssqr + abyabssqr);
//		System.out.println(lengthab);
		
		int bcx = (int) (b.getX() - c.getX());
		int bcy = (int) (b.getY() - c.getY());
		int bcxabs = Math.abs(bcx);
		int bcyabs = Math.abs(bcy);
		lengthbc = (int) Math.sqrt(Math.pow(bcxabs, 2) + Math.pow(bcyabs, 2));
//		System.out.println(lengthbc);
		
		int cax = (int) (c.getX() - a.getX());
		int cay = (int) (c.getY() - a.getY());
		int caxabs = Math.abs(cax);
		int cayabs = Math.abs(cay);
		lengthca = (int) Math.sqrt(caxabs * caxabs + Math.pow(cayabs, 2));
//		System.out.println(lengthca);
		
//		lengthab = (int) Math.sqrt(Math.pow(2, ((Math.abs(a.getX() - b.getX()) - Math.abs((b.getX() - c.getX())))) + Math.pow(2, (Math.abs(a.getY() - b.getY())) - Math.abs(b.getY() - c.getY()))));
//		lengthbc = (int) Math.sqrt(Math.pow(2, ((Math.abs(b.getX() - c.getX()) - Math.abs((c.getX() - a.getX())))) + Math.pow(2, (Math.abs(b.getY() - c.getY())) - Math.abs(c.getY() - a.getY()))));
//		lengthca = (int) Math.sqrt(Math.pow(2, ((Math.abs(c.getX() - a.getX()) - Math.abs((a.getX() - b.getX())))) + Math.pow(2, (Math.abs(c.getY() - a.getY())) - Math.abs(a.getY() - b.getY()))));
		alphaab = Math.sin((Math.abs(abx) / lengthab));
		alphabc = 270 - Math.cos((Math.abs(bcx) / lengthbc));
		alphaca = - Math.sin((Math.abs(cax) / lengthca));
	}

//	public Mountain(int ax, int ay, int bx, int by, int cx, int cy) {
//		a = new Point(ax, ay);
//		b = new Point(bx, by);
//		c = new Point(cx, cy);
//		lengthab = (int) Math.sqrt(Math.pow(2, ((Math.abs(a.getX() - b.getX()) - Math.abs((b.getX() - c.getX())))) + Math.pow(2, (Math.abs(a.getY() - b.getY())) - Math.abs(b.getY() - c.getY()))));
//		lengthbc = (int) Math.sqrt(Math.pow(2, ((Math.abs(b.getX() - c.getX()) - Math.abs((c.getX() - a.getX())))) + Math.pow(2, (Math.abs(b.getY() - c.getY())) - Math.abs(c.getY() - a.getY()))));
//		lengthca = (int) Math.sqrt(Math.pow(2, ((Math.abs(c.getX() - a.getX()) - Math.abs((a.getX() - b.getX())))) + Math.pow(2, (Math.abs(c.getY() - a.getY())) - Math.abs(a.getY() - b.getY()))));
//	}

	public String getTitle() {
		return "Perfect mountain";
	}

	public void draw(TurtleGraphics turtle) {
		turtle.moveTo(a.getX(), a.getY());
		turtle.moveTo(Math.abs(a.getX() - b.getX()),  Math.abs(a.getY() - b.getY()));
		fractalLine(turtle, order, lengthab, alphaab);
		fractalLine(turtle, order, lengthbc, alphabc);
		fractalLine(turtle, order, lengthca, alphaca);
	}
	
	private void fractalLine(TurtleGraphics turtle, int order, double length, double alpha) {
		if (order == 0) {
//			alpha = Math.sin((Math.abs(a.getX() - b.getX()) / length));
			turtle.setDirection(alpha);
			turtle.forward(length);
			
//			int length = Math.abs(a.getX() - b.getX()) - Math.abs(b.getX() - c.getX()) ,  Math.abs(a.getY() - b.getY())) -  Math.abs(b.getY() - c.getY()))
		} else {
//			fractalLine(turtle, order-1, length/2, 0);
//			fractalLine(turtle, order-1, length/2, 315);
//			fractalLine(turtle, order-1, length/2, 135);
		}
	}
}
